ECA Rule prov_r1_1_eca ACTION_REMOTE_SEND<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)> :- EVENT_RECV<requestProv(@X, URL, HOST, REQUESTID, Tag)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN, List := f_empty(), PID2 := f_sha1(((name_server+ X)+ DOMAIN)+ SERVER), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((address_record+ X)+ SERVER)+ ADDR), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := X, R := r2, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r1_2_eca ACTION_LOCAL_SEND<eRequestCount(@RLOC, RID, R, List, COUNT< * >)> :- EVENT_RECV<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)>, ruleExec(@RLOC, RID, R, List).
ECA Rule prov_r1_3_eca ACTION_ADD<ruleExec(@RLOC, RID, R, List)> :- EVENT_RECV<eRequestCount(@RLOC, RID, R, List, Rcount)>, Rcount == 0.
ECA Rule prov_r1_4_eca ACTION_REMOTE_SEND<requestProv(@ADDR, URL, HOST, REQUESTID, NewTag)> :- EVENT_RECV<eRequestTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)>, Hash := f_append(RID), NewTag := f_concat(Tag, Hash).
ECA Rule r1_eca ACTION_REMOTE_SEND<request(@ADDR, URL, HOST, REQUESTID, PIDHash)> :- EVENT_RECV<request(@X, URL, HOST, REQUESTID, PIDHash)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL != DOMAIN.
ECA Rule r100Eca0Ins ACTION_LOCAL_SEND<urlHash(@X, URL, HOST, REQUESTID, PIDequi)> :- EVENT_INSERT<url(@X, URL, HOST, REQUESTID)>, PIDequi := f_sha1((+ X)+ URL).
ECA Rule r101_eca ACTION_LOCAL_SEND<urlCount(@X, URL, HOST, REQUESTID, PIDequi, COUNT< * >)> :- EVENT_RECV<urlHash(@X, URL, HOST, REQUESTID, PIDequi)>, equiHashTable(@X, URL, PIDequi).
ECA Rule r102_eca ACTION_ADD<equiHashTable(@X, URL, PIDequi)> :- EVENT_RECV<urlCount(@X, URL, HOST, REQUESTID, PIDequi, PIDCount)>, PIDCount == 0.
ECA Rule r103_eca ACTION_LOCAL_SEND<request(@X, URL, HOST, REQUESTID, PIDHash)> :- EVENT_RECV<urlCount(@X, URL, HOST, REQUESTID, PIDequi, PIDCount)>, PIDCount != 0, PIDev := f_sha1((((url+ X)+ URL)+ HOST)+ REQUESTID), PIDequiHash := f_append(PIDequi), PIDevHash := f_append(PIDev), PIDHash := f_concat(PIDequiHash, PIDevHash).
ECA Rule prov_r2_1_eca ACTION_REMOTE_SEND<eRequestTemp(@RLOC, X, URL, HOST, REQUESTID, RID, R, List, Tag)> :- EVENT_RECV<urlCount(@X, URL, HOST, REQUESTID, PIDequi, PIDCount)>, PIDCount == 0, PIDev := f_sha1((((url+ X)+ URL)+ HOST)+ REQUESTID), Equilist := f_append(PIDequi), Evlist := f_append(PIDev), Tag := f_concat(Equilist, Evlist), List := f_empty(), RLOC := X, R := r1, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_1_eca ACTION_REMOTE_SEND<eresultsTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)> :- EVENT_RECV<requestProv(@X, URL, HOST, REQUESTID, Tag)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL == DOMAIN, PID1 := f_sha1((((request+ X)+ URL)+ HOST)+ REQUESTID), List := f_append(PID1), PID2 := f_sha1(((name_server+ X)+ DOMAIN)+ SERVER), List2 := f_append(PID2), List := f_concat(List, List2), PID3 := f_sha1(((address_record+ X)+ SERVER)+ ADDR), List3 := f_append(PID3), List := f_concat(List, List3), RLOC := X, R := r3, RID := f_sha1((R+ RLOC)+ List).
ECA Rule prov_r3_2_eca ACTION_LOCAL_SEND<eRequestCount(@RLOC, RID, R, List, COUNT< * >)> :- EVENT_RECV<eresultsTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)>, ruleExec(@RLOC, RID, R, List).
ECA Rule prov_r3_4_eca ACTION_REMOTE_SEND<eresults(@ADDR, URL, HOST, REQUESTID, RID, RLOC, Tag)> :- EVENT_RECV<eresultsTemp(@RLOC, ADDR, URL, HOST, REQUESTID, RID, R, List, Tag)>.
ECA Rule prov_r3_5_eca ACTION_LOCAL_SEND<resultsTemp(@ADDR, URL, HOST, REQUESTID, Tag)> :- EVENT_RECV<eresults(@ADDR, URL, HOST, REQUESTID, RID, RLOC, Tag)>, Hash := f_append(RID), NewTag := f_concat(Tag, Hash).
ECA Rule prov_r3_6_eca ACTION_LOCAL_SEND<resultsDecomp(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev, Hashlist)> :- EVENT_RECV<resultsTemp(@ADDR, URL, HOST, REQUESTID, Tag)>, PIDequi := f_first(Tag), Remainlist := f_removeFirst(Tag), PIDev := f_first(Remainlist), Hashlist := f_removeFirst(Remainlist).
ECA Rule prov_r3_7_eca ACTION_ADD<provHashTable(@ADDR, PIDequi, Hashlist)> :- EVENT_RECV<resultsDecomp(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev, Hashlist)>.
ECA Rule prov_r3_8_eca ACTION_ADD<results(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)> :- EVENT_RECV<resultsDecomp(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev, Hashlist)>.
ECA Rule r3ECAMat ACTION_ADD<results(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)> :- EVENT_RECV<r3resultssend(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)>.
ECA Rule r3_eca ACTION_REMOTE_SEND<r3resultssend(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)> :- EVENT_RECV<request(@X, URL, HOST, REQUESTID, PIDHash)>, name_server(@X, DOMAIN, SERVER), address_record(@X, SERVER, ADDR), f_indexof(URL, DOMAIN) != -1, URL == DOMAIN, PIDequi := f_first(PIDHash), PIDevHash := f_removeFirst(PIDHash), PIDev := f_first(PIDevHash).
ECA Rule r4Eca0Ins ACTION_ADD<resultsAux(@ADDR, PID, PIDequi, PIDev)> :- EVENT_INSERT<results(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)>, PID := f_sha1((((results+ ADDR)+ URL)+ HOST)+ REQUESTID).
ECA Rule r4Eca0Del ACTION_DELETE<resultsAux(@ADDR, PID, PIDequi, PIDev)> :- EVENT_DELETE<results(@ADDR, URL, HOST, REQUESTID, PIDequi, PIDev)>, PID := f_sha1((((results+ ADDR)+ URL)+ HOST)+ REQUESTID).
