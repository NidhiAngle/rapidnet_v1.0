ECA Rule rs10_eca ACTION_REMOTE_SEND<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RTempList, HashList)> :- EVENT_RECV<packet(@Switch, SrcAdd, DstAdd, Data, HashList)>, device(@Switch, Dvtype), maxPriority(@Switch, TopPriority), Dvtype == 0, RLoc := Switch, R := rs1, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1((maxPriority+ Switch)+ TopPriority), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1(R+ List), Rlist := f_append(R), RTempList := f_concat(Rlist, List).
ECA Rule rs11_eca ACTION_REMOTE_SEND<eMatchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RLoc, HashList)> :- EVENT_RECV<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RTempList, HashList)>.
ECA Rule rs12_eca ACTION_LOCAL_SEND<eMatchingPacketCount(@RLoc, RID, R, List, COUNT< * >)> :- EVENT_RECV<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RTempList, HashList)>, ruleExec(@RLoc, R, RID, List), R == f_first(RTempList), List == f_removeFirst(RTempList).
ECA Rule rs13_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<eMatchingPacketCount(@RLoc, RID, R, List, Rcount)>, Rcount == 0.
ECA Rule rs15_eca ACTION_LOCAL_SEND<matchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, NewHashList)> :- EVENT_RECV<eMatchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RLoc, HashList)>, Hash := f_append(RID), NewHashList := f_concat(HashList, Hash).
ECA Rule rs20_eca ACTION_REMOTE_SEND<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, NextPriority, RID, RTempList, HashList)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority, HashList)>, device(@Switch, Dvtype), flowEntry(@Switch, DstEntry, Next, Priority), Priority > 0, DstAdd != DstEntry, NextPriority := Priority- 1, Dvtype == 0, RLoc := Switch, R := rs2, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1((((flowEntry+ Switch)+ DstEntry)+ Next)+ Priority), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1(R+ List), Rlist := f_append(R), RTempList := f_concat(Rlist, List).
ECA Rule rs30_eca ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority, HashList)>, device(@Switch, Dvtype), flowEntry(@Switch, DstEntry, Next, Priority), link(@Switch, Next), Priority > 0, DstAdd == DstEntry, Dvtype == 0, RLoc := Switch, R := rs3, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1((((flowEntry+ Switch)+ DstEntry)+ Next)+ Priority), PID3 := f_sha1((link+ Switch)+ Next), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1(R+ List).
ECA Rule rs31_eca ACTION_REMOTE_SEND<ePacket(@Next, SrcAdd, DstAdd, Data, RID, RLoc, HashList)> :- EVENT_RECV<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List, HashList)>.
ECA Rule rs32_eca ACTION_LOCAL_SEND<ePaketCount(@RLoc, RID, R, List, COUNT< * >)> :- EVENT_RECV<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List, HashList)>, ruleExec(@RLoc, RID, R, List).
ECA Rule rs33_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<ePaketCount(@RLoc, RID, R, List, Rcount)>, Rcount == 0.
ECA Rule rs34_eca ACTION_LOCAL_SEND<packet(@Next, SrcAdd, DstAdd, Data, NewHashList)> :- EVENT_RECV<ePacket(@Next, SrcAdd, DstAdd, Data, RID, RLoc, HashList)>, Hash := f_append(RID), NewHashList := f_concat(HashList, Hash).
ECA Rule rs40_eca ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority, HashList)>, device(@Switch, Dvtype), flowEntry(@Switch, DstAdd, Next, Priority), link(@Switch, Next), Priority == 0, Dvtype == 0, RLoc := Switch, R := rs4, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1((((flowEntry+ Switch)+ DstAdd)+ Next)+ Priority), PID3 := f_sha1((link+ Switch)+ Next), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1(R+ List).
ECA Rule rh10Eca0Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_INSERT<device(@Host, Dvtype)>, initPacket(@Host, SrcAdd, DstAdd, Data), linkhr(@Host, Switch), Dvtype == 1, RLoc := Host, R := rh1, PIDev := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), Eventlist := f_append(PIDev), PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1(R+ List), RIDlist := f_append(RID), HashList := f_concat(Eventlist, RIDlist).
ECA Rule rh10Eca1Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_INSERT<initPacket(@Host, SrcAdd, DstAdd, Data)>, device(@Host, Dvtype), linkhr(@Host, Switch), Dvtype == 1, RLoc := Host, R := rh1, PIDev := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), Eventlist := f_append(PIDev), PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1(R+ List), RIDlist := f_append(RID), HashList := f_concat(Eventlist, RIDlist).
ECA Rule rh10Eca2Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_INSERT<linkhr(@Host, Switch)>, device(@Host, Dvtype), initPacket(@Host, SrcAdd, DstAdd, Data), Dvtype == 1, RLoc := Host, R := rh1, PIDev := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), Eventlist := f_append(PIDev), PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1(R+ List), RIDlist := f_append(RID), HashList := f_concat(Eventlist, RIDlist).
ECA Rule rh20_eca ACTION_REMOTE_SEND<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List, HashList)> :- EVENT_RECV<packet(@Host, SrcAdd, DstAdd, Data, HashList)>, device(@Host, Dvtype), Dvtype == 1, RLoc := Host, R := rh2, PID1 := f_sha1((device+ Host)+ Dvtype), List := f_append(PID1), RID := f_sha1(R+ List).
ECA Rule rh21_eca ACTION_REMOTE_SEND<eRecvPacket(@Host, SrcAdd, DstAdd, Data, RID, RLoc, HashList)> :- EVENT_RECV<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List, HashList)>.
ECA Rule rh22_eca ACTION_LOCAL_SEND<eRecvPacketCount(@RLoc, RID, R, List, COUNT< * >)> :- EVENT_RECV<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List, HashList)>, ruleExec(@RLoc, RID, R, List).
ECA Rule rs23_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<eRecvPacketCount(@RLoc, RID, R, List, Rcount)>, Rcount == 0.
ECA Rule rh24_eca ACTION_ADD<recvPacket(@Host, SrcAdd, DstAdd, Data, NewHashList)> :- EVENT_RECV<eRecvPacket(@Host, SrcAdd, DstAdd, Data, RID, RLoc, HashList)>, Hash := f_append(RID), NewHashList := f_concat(HashList, Hash).
