ECA Rule r00Eca1Ins ACTION_LOCAL_SEND<prov(@Host, VID, RID, $1)> :- EVENT_INSERT<initPacket(@Host, SrcAdd, DstAdd, Data)>, $1 := Host, VID := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), RID := VID.
ECA Rule r01Eca1Ins ACTION_LOCAL_SEND<prov(@Device, VID, RID, $1)> :- EVENT_INSERT<device(@Device, Dvtype)>, $1 := Device, VID := f_sha1((device+ Device)+ Dvtype), RID := VID.
ECA Rule r02Eca1Ins ACTION_LOCAL_SEND<prov(@Switch, VID, RID, $1)> :- EVENT_INSERT<maxPriority(@Switch, TopPriority)>, $1 := Switch, VID := f_sha1((maxPriority+ Switch)+ TopPriority), RID := VID.
ECA Rule r03Eca1Ins ACTION_LOCAL_SEND<prov(@Switch, VID, RID, $1)> :- EVENT_INSERT<flowEntry(@Switch, DstEntry, Next, Priority)>, $1 := Switch, VID := f_sha1(((Switch+ DstEntry)+ Next)+ Priority), RID := VID.
ECA Rule rs10_eca ACTION_REMOTE_SEND<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, R, List)> :- EVENT_RECV<packet(@Switch, SrcAdd, DstAdd, Data)>, device(@Switch, Dvtype), maxPriority(@Switch, TopPriority), Dvtype == 0, RLoc := Switch, R := rs1, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1((((packet+ Switch)+ SrcAdd)+ DstAdd)+ Data), PID3 := f_sha1((maxPriority+ Switch)+ TopPriority), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rs11_eca ACTION_REMOTE_SEND<eMatchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RLoc)> :- EVENT_RECV<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, R, List)>.
ECA Rule rs12_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, TopPriority, RID, R, List)>.
ECA Rule rs13_eca ACTION_LOCAL_SEND<matchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority)> :- EVENT_RECV<eMatchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RLoc)>.
ECA Rule rs14_eca ACTION_LOCAL_SEND<prov(@Switch, VID, RID, RLoc)> :- EVENT_RECV<eMatchingPacket(@Switch, SrcAdd, DstAdd, Data, TopPriority, RID, RLoc)>, VID := f_sha1(((((matchingPacket+ Switch)+ SrcAdd)+ DstAdd)+ Data)+ TopPriority).
ECA Rule rs20_eca ACTION_REMOTE_SEND<eMatchingPacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, NextPriority, RID, R, List)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority)>, device(@Switch, Dvtype), flowEntry(@Switch, DstEntry, Next, Priority), Priority > 0, DstAdd != DstEntry, NextPriority := Priority- 1, Dvtype == 0, RLoc := Switch, R := rs2, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1(((((matchingPacket+ Switch)+ SrcAdd)+ DstAdd)+ Data)+ Priority), PID3 := f_sha1((((flowEntry+ Switch)+ DstEntry)+ Next)+ Priority), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rs30_eca ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority)>, device(@Switch, Dvtype), flowEntry(@Switch, DstEntry, Next, Priority), link(@Switch, Next), Priority > 0, DstAdd == DstEntry, Dvtype == 0, RLoc := Switch, R := rs3, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1(((((matchingPacket+ Switch)+ SrcAdd)+ DstAdd)+ Data)+ Priority), PID3 := f_sha1((((flowEntry+ Switch)+ DstEntry)+ Next)+ Priority), PID4 := f_sha1((link+ Switch)+ Next), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), List4 := f_append(PID4), List := f_concat(List, List4), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rs31_eca ACTION_REMOTE_SEND<ePacket(@Next, SrcAdd, DstAdd, Data, RID, RLoc)> :- EVENT_RECV<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule fs32_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule rs33_eca ACTION_LOCAL_SEND<packet(@Next, SrcAdd, DstAdd, Data)> :- EVENT_RECV<ePacket(@Next, SrcAdd, DstAdd, Data, RID, RLoc)>.
ECA Rule rs34_eca ACTION_LOCAL_SEND<prov(@Next, VID, RID, RLoc)> :- EVENT_RECV<ePacket(@Next, SrcAdd, DstAdd, Data, RID, RLoc)>, VID := f_sha1((((packet+ Next)+ SrcAdd)+ DstAdd)+ Data).
ECA Rule rs40_eca ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Next, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_RECV<matchingPacket(@Switch, SrcAdd, DstAdd, Data, Priority)>, device(@Switch, Dvtype), flowEntry(@Switch, DstAdd, Next, Priority), link(@Switch, Next), Priority == 0, Dvtype == 0, RLoc := Switch, R := rs4, PID1 := f_sha1((device+ Switch)+ Dvtype), PID2 := f_sha1(((((matchingPacket+ Switch)+ SrcAdd)+ DstAdd)+ Data)+ Priority), PID3 := f_sha1((((flowEntry+ Switch)+ DstAdd)+ Next)+ Priority), PID4 := f_sha1((link+ Switch)+ Next), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), List4 := f_append(PID4), List := f_concat(List, List4), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rh10Eca0Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<device(@Host, Dvtype)>, initPacket(@Host, SrcAdd, DstAdd, Data), linkhr(@Host, Switch), Dvtype == 1, RLoc := Host, R := rh1, PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), PID3 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rh10Eca1Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<initPacket(@Host, SrcAdd, DstAdd, Data)>, device(@Host, Dvtype), linkhr(@Host, Switch), Dvtype == 1, RLoc := Host, R := rh1, PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), PID3 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rh10Eca2Ins ACTION_REMOTE_SEND<ePacketTemp(@RLoc, Switch, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_INSERT<linkhr(@Host, Switch)>, device(@Host, Dvtype), initPacket(@Host, SrcAdd, DstAdd, Data), Dvtype == 1, RLoc := Host, R := rh1, PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((((initPacket+ Host)+ SrcAdd)+ DstAdd)+ Data), PID3 := f_sha1((linkhr+ Host)+ Switch), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), List3 := f_append(PID3), List := f_concat(List, List3), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rh20_eca ACTION_REMOTE_SEND<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List)> :- EVENT_RECV<packet(@Host, SrcAdd, DstAdd, Data)>, device(@Host, Dvtype), Dvtype == 1, RLoc := Host, R := rh2, PID1 := f_sha1((device+ Host)+ Dvtype), PID2 := f_sha1((((packet+ Host)+ SrcAdd)+ DstAdd)+ Data), List := f_append(PID1), List2 := f_append(PID2), List := f_concat(List, List2), RID := f_sha1((R+ RLoc)+ List).
ECA Rule rh21_eca ACTION_REMOTE_SEND<eRecvPacket(@Host, SrcAdd, DstAdd, Data, RID, RLoc)> :- EVENT_RECV<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule rh22_eca ACTION_ADD<ruleExec(@RLoc, RID, R, List)> :- EVENT_RECV<eRecvPacketTemp(@RLoc, Host, SrcAdd, DstAdd, Data, RID, R, List)>.
ECA Rule rh23_eca ACTION_ADD<recvPacket(@Host, SrcAdd, DstAdd, Data)> :- EVENT_RECV<eRecvPacket(@Host, SrcAdd, DstAdd, Data, RID, RLoc)>.
ECA Rule rh24_eca ACTION_LOCAL_SEND<prov(@Host, VID, RID, RLoc)> :- EVENT_RECV<eRecvPacket(@Host, SrcAdd, DstAdd, Data, RID, RLoc)>, VID := f_sha1((((recvPacket+ Host)+ SrcAdd)+ DstAdd)+ Data).
